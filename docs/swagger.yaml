basePath: /api/v1
definitions:
  diprec_api_internal_domain.AuthResponse:
    properties:
      accessToken:
        type: string
      expiresAt:
        type: string
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/diprec_api_internal_domain.UserResponse'
    type: object
  diprec_api_internal_domain.CourseResponse:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  diprec_api_internal_domain.CourseResponseWithTests:
    properties:
      createdAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      tests:
        items:
          $ref: '#/definitions/diprec_api_internal_domain.TestResponse'
        type: array
      updatedAt:
        type: string
    type: object
  diprec_api_internal_domain.Error:
    properties:
      message:
        type: string
    type: object
  diprec_api_internal_domain.QuestionAnswer:
    properties:
      answer: {}
      isCorrect:
        type: boolean
      message:
        type: string
    type: object
  diprec_api_internal_domain.QuestionResponse:
    properties:
      answer: {}
      id:
        type: integer
      title:
        type: string
      type:
        enum:
        - SINGLE
        - MULTIPLE
        - TEXT
        - NUMBER
        example: SINGLE
        type: string
      variants:
        additionalProperties: true
        type: object
    type: object
  diprec_api_internal_domain.TestResponse:
    properties:
      assignee:
        type: string
      createdAt:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    type: object
  diprec_api_internal_domain.TestResponseWithQuestions:
    properties:
      assignee:
        type: string
      createdAt:
        type: string
      deadline:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      questions:
        items:
          $ref: '#/definitions/diprec_api_internal_domain.QuestionResponse'
        type: array
      status:
        type: string
      updatedAt:
        type: string
    type: object
  diprec_api_internal_domain.UserResponse:
    properties:
      createdAt:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      patronymic:
        type: string
      role:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  diprec_api_internal_domain.UserResponseWithCourses:
    properties:
      courses:
        items:
          $ref: '#/definitions/diprec_api_internal_domain.CourseResponse'
        type: array
      createdAt:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      patronymic:
        type: string
      role:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  internal_transport_http_course.CreateCourseDTO:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  internal_transport_http_course.UpdateCourseDTO:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  internal_transport_http_question.CheckAnswerDTO:
    properties:
      answer: {}
    type: object
  internal_transport_http_question.CreateQuestionDTO:
    properties:
      answer: {}
      title:
        type: string
      type:
        enum:
        - SINGLE
        - TEXT
        - NUMBER
        - MULTIPLE
        example: SINGLE
        type: string
      variants:
        additionalProperties: true
        type: object
    type: object
  internal_transport_http_question.UpdateQuestionDTO:
    properties:
      answer: {}
      title:
        type: string
      type:
        enum:
        - SINGLE
        - TEXT
        - NUMBER
        - MULTIPLE
        example: SINGLE
        type: string
      variants:
        additionalProperties: true
        type: object
    type: object
  internal_transport_http_test.AttachQuestionDTO:
    properties:
      questionID:
        type: integer
    type: object
  internal_transport_http_test.CreateTestDTO:
    properties:
      deadline:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  internal_transport_http_test.RemoveQuestionDTO:
    properties:
      questionId:
        type: integer
    required:
    - questionId
    type: object
  internal_transport_http_test.UpdateTestDTO:
    properties:
      deadline:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  internal_transport_http_user.CreateUserDTO:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      password:
        minLength: 8
        type: string
      patronymic:
        type: string
      username:
        type: string
    required:
    - firstName
    - lastName
    - password
    - username
    type: object
  internal_transport_http_user.LoginUserDTO:
    properties:
      password:
        minLength: 8
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  internal_transport_http_user.RefreshUserDTO:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для дипломного проекта
  termsOfService: http://swagger.io/terms/
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для авторизации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_user.LoginUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      summary: Аутентификация пользователя
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh Token
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_user.RefreshUserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      summary: Обновить токены авторизации
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_user.CreateUserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Пользователь успешно зарегистрирован
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.AuthResponse'
        "400":
          description: Неверный формат запроса / тело запроса
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Ошибка авторизации
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "409":
          description: Пользователь с таким именем уже существует
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      summary: Зарегистрировать нового пользователя
      tags:
      - Auth
  /course:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.CourseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Получить курсы
      tags:
      - Course
    post:
      parameters:
      - description: Название и описание курса
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_course.CreateCourseDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.CourseResponse'
      security:
      - BearerAuth: []
      summary: Создать курс
      tags:
      - Course
  /course/{id}:
    delete:
      parameters:
      - description: ID курса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Курс успешно удалён
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Удалить курс
      tags:
      - Course
    get:
      parameters:
      - description: ID курса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.CourseResponseWithTests'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Получить курс по ID
      tags:
      - Course
    put:
      parameters:
      - description: ID курса
        in: path
        name: id
        required: true
        type: integer
      - description: Название и описание курса
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_course.UpdateCourseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.CourseResponseWithTests'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Обновить курс
      tags:
      - Course
  /course/{id}/enroll:
    post:
      parameters:
      - description: ID курса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Записаться на курс
      tags:
      - Course
  /question:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/diprec_api_internal_domain.QuestionResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Получить все вопросы
      tags:
      - Question
    post:
      parameters:
      - description: ДТО создания вопроса
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_question.CreateQuestionDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.QuestionResponse'
      security:
      - BearerAuth: []
      summary: Создать вопрос
      tags:
      - Question
  /question/{id}:
    delete:
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Удалить вопрос
      tags:
      - Question
    get:
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.QuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Получить вопрос по ID
      tags:
      - Question
    put:
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      - description: ДТО обновления вопроса
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_question.UpdateQuestionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.QuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Обновить вопрос
      tags:
      - Question
  /question/{id}/check:
    post:
      parameters:
      - description: ID вопроса
        in: path
        name: id
        required: true
        type: integer
      - description: ДТО ответа на вопрос
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_question.CheckAnswerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.QuestionAnswer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Проверить вопрос
      tags:
      - Question
  /test/{id}:
    delete:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Удалить тест
      tags:
      - Test
    get:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.TestResponseWithQuestions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Получить тест по ID
      tags:
      - Test
    post:
      parameters:
      - description: Название, описание и дедлайн теста
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_test.CreateTestDTO'
      - description: ID курса
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.TestResponse'
      security:
      - BearerAuth: []
      summary: Создать тест
      tags:
      - Test
    put:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      - description: Название, описание и дедлайн теста
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_test.UpdateTestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.TestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Обновить тест
      tags:
      - Test
  /test/{id}/begin:
    post:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Приступить к тесту (студент)
      tags:
      - Test
  /test/{id}/finish:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      - description: ID вопроса для удаления
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_test.RemoveQuestionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Завершить тест (студент)
      tags:
      - Test
  /test/{id}/question:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      - description: ID вопроса для удаления
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_test.RemoveQuestionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Вопрос откреплён
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Открепить вопрос от теста
      tags:
      - Test
    post:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      - description: ID вопроса
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/internal_transport_http_test.AttachQuestionDTO'
      produces:
      - application/json
      responses:
        "200":
          description: Вопрос прикреплен
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Прикрепить вопрос к тесту
      tags:
      - Test
  /test/{id}/start:
    put:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.TestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Запустить тест (учитель)
      tags:
      - Test
  /test/{id}/stop:
    put:
      parameters:
      - description: ID теста
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.TestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Остановить тест (учитель)
      tags:
      - Test
  /user/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.UserResponseWithCourses'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/diprec_api_internal_domain.Error'
      security:
      - BearerAuth: []
      summary: Получение информации о текущем пользователе
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
